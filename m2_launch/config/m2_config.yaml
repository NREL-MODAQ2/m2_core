LabjackAINFast:
  ros__parameters:
    IPAddress: "10.10.59.112"
    SampleRate: 10000.0 #Must include a decimal
    ScansPerRead: 1000
    ainTopic: "/ain_fast"
LabjackAINSlow:
  ros__parameters:
    IPAddress: "10.10.59.112"
    sampleRateMS: 1000
    ainTopic: "/ain_slow"
LabjackDO:
  ros__parameters:
    IPAddress: "10.10.59.112"
    doTopic: "/do"
LabjackDIN:
  ros__parameters:
    IPAddress: "10.10.59.112"
    sampleRateMS: 10
    dinTopic: "/din"
LabjackDAC:
  ros__parameters:
    IPAddress: "10.10.59.112"
    dacTopic: "/dac"
    analogOutTag: "TDAC0"
BagRecorder:
  ros__parameters:
    dataFolder: "/home/m2/Data"
    fileDuration: 60
    loggedTopics:
      - "*"
##M2Control:
##  ros__parameters:
M2Supervisor:
  ros__parameters:
    loggerPath: "/home/m2/Log"
    loggerLimitBytes: 1000000
    emailSendAddr: "youremailwithsmtpenabled@email.com"
    emailSendPwd: "passwordhere"
    emailGroup1:
      - "youremail@email.com"      
    emailGroup2:
      - "youremail2@email.com"
    analyzedTopics:
      - /ain_flap
      - /T8din
    topicErrorEmailSnooze: 60
RTDed582:
  ros__parameters:
    IPAddress:  "10.10.59.115"
    RTDtopic: "/rtd"
    sampleRateMS: 1000
Rosbridge:
  ros__parameters:
    delay_between_messages: 0.05
AdnavCompass:
  ros__parameters:

    # Path to place logfiles generated by this driver. 
    log_path: "/home/m2/Data/"

    # What method will be used to connect to the device. 
    # 0: Serial, 1/2: TCP Client/Server, 3: UDP, 4: CAN (N/A)
    comm_select: 3

    ################ Serial Communication Parameters
    # Supported Baud Rates: 2.4K, 4.8K, 9.6K, 19.2K, 38.4K, 57.6K.
    # 115.2K, 230.4K, 460.8K, 500K, 576K, 921.6K, 1M, 2M
    baud_rate: 2000000
    com_port: ""

    ################ IP Communication Parameters
    # IP of the Advanced Navigation Device. 
    ip_address: "" # only required if comm_select = 1
    # Port to communicate over. 
    port: 16719

    # This is the minimum period for reading and publishing data.
    # Warning on some systems this is performance limited.  
    # The configuration will be rejected if publissh_us < read_us
    # Units are in μs. 20000 = 50Hz | 1000 = 1000Hz etc.
    publish_us: 100000
    read_us: 1000

    # This is the setup for what ANPP Packets you wish to read from your
    # device. It must have an even number of entries
    # Every odd entry is the requested 'id' of the packet
    #   See ANPP Documentation for more information on packet types and 
    #   corresponding IDs
    # Every even entry is the requsted 'period' of the packet 
    #   The Number of Periods for each packet to be output from the device
    #   once. To find the frequncy for each packet use the following:
    #   Freq = 1000000/(Period * Packet Timer Period)
    #   e.g. 10,000 μs Period length and 10 periods per packet gives 10Hz
    # e.g. Requesting Packet 20 with a period of 50 is [20,50]
    packet_request: [20, 500,33,2]
    
    # The size of the packet period in Microseconds. 
    # Bounded to [1000-65535] [1000Hz-15.29Hz]
    packet_timer_period: 1000
XsensINS:
    ros__parameters:

        ## Device settings, provide one of the following:
        ##  - scan_for devices = 
        ##          true:   the driver ignores port and baudrate settings, scans for devices on all ports and selects the first found
        ##          false: = Requires correct port and baudrate both to be specified
        scan_for_devices: false
        port: "/dev/ttyUSB0" # port name, e.g. '/dev/ttyUSB0'
        baudrate: 115200 # non necessary for some devices

        ## Connect only to specific device_id:
        ##  device_id = '077007EF' (uppercase hex string), returns with error if the device with ID is not found on the ports
        ##  device_id = "" Null string disables this check
        device_id: "" # Null String ("") by default, else uppercase hex string, e.g. '077007EF'

        # Enable logging. Requires name of the file to be specified.
        enable_logging: false
        ## Log file (optional), placed in ~/.ros/ otherwise use absolute path
        log_file: log.mtb

        publisher_queue_size: 5

        # TF transform frame_id (default: imu_link), you may want to change it if you use multiple devices
        frame_id: "imu_link"

        # Message publishers
        pub_imu: true
        pub_quaternion: true
        pub_mag: true
        pub_angular_velocity: true
        pub_acceleration: true
        pub_free_acceleration: true
        pub_dq: true
        pub_dv: true
        pub_sampletime: true
        pub_temperature: true
        pub_pressure: true
        pub_gnss: true
        pub_twist: true
        pub_transform: true
        pub_positionLLA: true
        pub_velocity: true

        ## Sensor standard deviation [x,y,z] (optional)
        ## This value is used to override the covariance matrix in sensor_msgs/Imu and
        ## sensor_msgs/MagneticField messages.
        ## Important: Make sure the values provided are in decimal points, or else might give error in execution
        linear_acceleration_stddev: [0.0, 0.0, 0.0] # [m/s^2]
        angular_velocity_stddev: [0.0, 0.0, 0.0] # [rad/s]
        orientation_stddev: [0.0, 0.0, 0.0] # [rad]
        magnetic_field_stddev: [0.0, 0.0, 0.0] # [Tesla]

